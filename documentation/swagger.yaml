openapi: 3.0.0
info:
  title: Shop
  description: This is a simple API
  contact:
    email: roman.m2003@yandex.ru
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/StounhandJ/shop/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost
  description: SwaggerHub API Auto Mocking
tags:
- name: maker
  description: Производители
- name: department
  description: Отделы товаров
- name: category
  description: Категории
- name: product
  description: Категории
paths:
  /action/maker:
    get:
      tags:
      - maker
      summary: Список
      operationId: indexMaker
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
    post:
      tags:
      - maker
      summary: Создать производителя
      operationId: storeMaker
      parameters:
      - name: name
        in: query
        description: Имя производителя
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
  /action/maker/{maker}:
    get:
      tags:
      - maker
      summary: Показать производителя
      operationId: showMaker
      parameters:
      - name: maker
        in: path
        description: ID производителя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 236
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "404":
          description: Производитель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
    put:
      tags:
      - maker
      summary: Обновить производителя
      operationId: updateMaker
      parameters:
      - name: maker
        in: path
        description: ID производителя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 236
      - name: name
        in: query
        description: Имя производителя
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "404":
          description: Производитель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
    delete:
      tags:
      - maker
      summary: Удалить производителя
      operationId: deleteMaker
      parameters:
      - name: maker
        in: path
        description: ID производителя
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 236
      responses:
        "200":
          description: Успешное удаление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: Производитель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "500":
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
  /action/department:
    get:
      tags:
      - department
      summary: Список
      operationId: indexDepartment
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
    post:
      tags:
      - department
      summary: Создать отдел
      operationId: storeDepartment
      parameters:
      - name: name
        in: query
        description: Имя отдела
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Мебель
      - name: e_name
        in: query
        description: "Имя прописными латиницкими буквами, без пробелов"
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: mebel
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
  /action/department/{department}:
    get:
      tags:
      - department
      summary: Показать отдел
      operationId: showDepartment
      parameters:
      - name: department
        in: path
        description: ID отдела
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "404":
          description: Отдел не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
    put:
      tags:
      - department
      summary: Обновить отдел
      operationId: updateDepartment
      parameters:
      - name: department
        in: path
        description: ID отдела
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 79
      - name: name
        in: query
        description: Название отдела
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Сантехника
      - name: e_name
        in: query
        description: "Имя прописными латиницкими буквами, без пробелов"
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: santex
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "404":
          description: Отдел не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
    delete:
      tags:
      - department
      summary: Удалить отдел
      operationId: deleteDepartment
      parameters:
      - name: department
        in: path
        description: ID отдела
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Успешное удаление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: Отдел не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "500":
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
  /action/category:
    get:
      tags:
      - category
      summary: Список
      operationId: indexCategory
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
    post:
      tags:
      - category
      summary: Создать категорию
      operationId: storeCategory
      parameters:
      - name: name
        in: query
        description: Название категории
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Шкаф
      - name: e_name
        in: query
        description: "Низвание прописными латиницкими буквами, без пробелов"
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: shkafs
      - name: department_id
        in: query
        description: ID отдела к которому принадлежит категория
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
  /action/category/{category}:
    get:
      tags:
      - category
      summary: Показать категорию
      operationId: showCategory
      parameters:
      - name: category
        in: path
        description: ID категории
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 31
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "404":
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_2'
    put:
      tags:
      - category
      summary: Обновить категорию
      operationId: updateCategory
      parameters:
      - name: category
        in: path
        description: ID категории
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 31
      - name: name
        in: query
        description: Название категории
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Столы
      - name: e_name
        in: query
        description: "Низвание прописными латиницкими буквами, без пробелов"
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: stols
      - name: department_id
        in: query
        description: ID отдела к которому принадлежит категория
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "404":
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_2'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
    delete:
      tags:
      - category
      summary: Удалить категорию
      operationId: deleteСategory
      parameters:
      - name: category
        in: path
        description: ID категории
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Успешное удаление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_2'
        "500":
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
  /action/product:
    get:
      tags:
      - product
      summary: Список
      operationId: indexProduct
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
    post:
      tags:
      - product
      summary: Создать продукт
      operationId: storeProduct
      parameters:
      - name: title
        in: query
        description: Название продукта
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Шкаф дубовый
      - name: description
        in: query
        required: true
        style: form
        explode: true
        schema:
          maximum: 3000
          minimum: 3
          type: string
        example: Очень хороший и красивый шкаф
      - name: e_name
        in: query
        description: "Низвание прописными латиницкими буквами, без пробелов"
        required: true
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: shkafdyb
      - name: category_id
        in: query
        description: ID категории к которой принадлежит товар
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 31
      - name: maker_id
        in: query
        description: ID производителя к которой принадлежит товар
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 236
      - name: price
        in: query
        description: Цена
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
        example: 81000
      - name: photo
        in: query
        description: "Фотография, до 10мб"
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: binary
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
  /action/product/{product}:
    get:
      tags:
      - product
      summary: Показать продукт
      operationId: showProduct
      parameters:
      - name: product
        in: path
        description: ID продукта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 31
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "404":
          description: Продукт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_3'
    put:
      tags:
      - product
      summary: Обновить продукт
      operationId: updateProduct
      parameters:
      - name: product
        in: path
        description: ID продукта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 31
      - name: title
        in: query
        description: Название продукта
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: Шкаф еловый
      - name: description
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 3000
          minimum: 3
          type: string
        example: А может и не очень красивый
      - name: e_name
        in: query
        description: "Низвание прописными латиницкими буквами, без пробелов"
        required: false
        style: form
        explode: true
        schema:
          maximum: 60
          minimum: 3
          type: string
        example: elishkaf
      - name: category_id
        in: query
        description: ID категории к которой принадлежит товар
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 34
      - name: maker_id
        in: query
        description: ID производителя к которой принадлежит товар
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 975
      - name: price
        in: query
        description: Цена
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
        example: 27000
      - name: photo
        in: query
        description: "Фотография, до 10мб"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: binary
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "404":
          description: Продукт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_3'
        "422":
          description: Полученные данные были неверными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
    delete:
      tags:
      - product
      summary: Удалить продукт
      operationId: deleteProduct
      parameters:
      - name: product
        in: path
        description: ID продукта
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 79
      responses:
        "200":
          description: Успешное удаление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: Продукт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_3'
        "500":
          description: Непредвиденная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
  /action/order:
    get:
      tags:
      - order
      summary: Список
      operationId: indexOrder
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
  /action/order/{maker}:
    get:
      tags:
      - order
      summary: Показать заказ
      operationId: showOrder
      parameters:
      - name: maker
        in: path
        description: ID заказа
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 236
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "404":
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404_4'
components:
  schemas:
    Maker:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 236
        name:
          type: string
          example: Widget Adapter
    Department:
      required:
      - e_name
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 79
        name:
          type: string
          example: Мебель
        e_name:
          type: string
          description: "Имя прописными латиницкими буквами, без пробелов"
          example: mebel
    Category:
      required:
      - department_id
      - department_name
      - e_name
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 31
        name:
          type: string
          example: Шкафы
        e_name:
          type: string
          description: "Имя прописными латиницкими буквами, без пробелов"
          example: shkafs
        department_id:
          type: integer
          description: ID Отдела к которой принадлежит категория
          example: 79
        department_name:
          type: string
          description: Название Отдела к которой принадлежит категория
          example: Мебель
    Product:
      required:
      - category
      - description
      - e_name
      - id
      - img_src
      - maker_id
      - price
      - title
      - url
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 581
        title:
          type: string
          example: Дубовый шкаф
        description:
          type: string
          example: Очень хороший и красивый шкаф
        price:
          type: integer
          example: 81000
        e_name:
          type: string
          description: "Имя прописными латиницкими буквами, без пробелов"
          example: shkafdyb
        img_url:
          type: string
          description: Ссылка на фотографию
          example: http://localhost/img/rM3VJDXKPIRIhH1T1DAha3.png
        category_id:
          type: integer
          description: ID категории к которой принадлежит товар
          example: 31
        maker_id:
          type: integer
          description: ID производителя к которой принадлежит товар
          example: 236
        url:
          type: string
          description: Ссылка на страницу товара
          example: http://localhost/p/581
    Order:
      required:
      - id
      - products
      type: object
      properties:
        id:
          type: integer
          format: uuid
          example: 581
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    inline_response_200:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          type: array
          items:
            $ref: '#/components/schemas/Maker'
    inline_response_200_1:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          $ref: '#/components/schemas/Maker'
    inline_response_422:
      type: object
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          description: Перечесление ошибочных данных
    inline_response_404:
      type: object
      properties:
        message:
          type: string
          example: No query results for model "Maker"
    inline_response_200_2:
      type: object
      properties:
        message:
          type: string
          example: success
    inline_response_500:
      type: object
      properties:
        message:
          type: string
          example: error
    inline_response_200_3:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    inline_response_200_4:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          $ref: '#/components/schemas/Department'
    inline_response_404_1:
      type: object
      properties:
        message:
          type: string
          example: No query results for model "Department"
    inline_response_200_5:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    inline_response_200_6:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          $ref: '#/components/schemas/Category'
    inline_response_404_2:
      type: object
      properties:
        message:
          type: string
          example: No query results for model "Сategory"
    inline_response_200_7:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    inline_response_200_8:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          $ref: '#/components/schemas/Product'
    inline_response_404_3:
      type: object
      properties:
        message:
          type: string
          example: No query results for model "Product"
    inline_response_200_9:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    inline_response_200_10:
      type: object
      properties:
        message:
          type: string
          example: success
        response:
          $ref: '#/components/schemas/Order'
    inline_response_404_4:
      type: object
      properties:
        message:
          type: string
          example: No query results for model "Order"
